setwd("~/Coursera/RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
head(activity)
head(activity,30)
tail(activity,30)
notNA <- !is.na(activity$steps)
head(notNA)
which(notNA)
str(activity)
notNAind <- which(!is.na(activity$steps))
sapply(activity$steps,mean by date)
sapply(activity$steps,mean, by=activity$date)
activity <- read.csv("activity.csv",colClasses=c("numeric","Date","numeric"))
head(activity)
a <- split(activity by date)
?split
a <- split(activity,activity$date)
str(a)
activityNoNA <- activity(which(!is.na(activity$steps)),)
activity <- read.csv("activity.csv",colClasses=c("numeric","Date","numeric"))
activityNoNA <- activity[which(!is.na(activity$steps)),]
head(activityNoNA)
split_activity <- split(activityNoNA,activityNoNA$date)
sapply(split_activity,sum)
str(split_activity)
sapply(split_activity$steps,sum)
sum_steps <- sapply(split_activity$steps,sum)
sum_steps
sum_steps[1]
sum_steps[[1]
]
str(sum_steps)
library(data.table)
a2 <- data.table(activityNoNA)
head(a2)
lapply(a2$steps,sum)
a2[,lapply(a2$steps,sum),by="Date"]
a2[,lapply(a2$steps,sum),by="a2$Date"]
split_activity <- split(activityNoNA,activityNoNA$date)
str(split_activity)
lapply(split_activity$steps,sum)
names(split_activity)
by(activityNoNA,activityNoNA["Date"],transform,sum(steps))
head(activityNoNA)
by(activityNoNA,activityNoNA["date"],transform,sum(steps))
install.packages("plyr")
library(plyr)
?ddply
a3 <- ddply(activityNoNA,date,sum)
a3 <- ddply(activityNoNA,"date",sum)
a3 <- ddply(activityNoNA$steps,"date",sum)
a3 <- ddply(activityNoNA,"date",summarize,sumSteps=sum(steps) )
head(a3)
hist(date,sum_steps)
hist(a3$date,a3$sumSteps)
?hist
hist(a3$sumSteps)
hist(a3$sumSteps,10)
hist(a3$sumSteps,10,xlab="number of steps taken", main="Histogram of Steps per Day")
mean(a3$sumSteps)
median(a3$sumSteps)
summary(a3$sumSteps)
?mean
summary(a3$sumSteps, digits=8)
View(activityNoNA)
a4 <- ddply(activityNoNA,"interval",summarize,avgSteps=mean(steps) )
head(a4)
which(max(a4$avgSteps))
max(a4$avgSteps)
?which
which.max(a4$avgSteps)
a4$interval[which.max(a4$avgSteps)]
plot(a4$interval,a4$avgSteps, type="1")
plot(a4$interval,a4$avgSteps)
?plot
plot(a4$interval,a4$avgSteps,type="l")
plot(a4$interval,a4$avgSteps,type="l",xlab="time interval",ylab="avg # of steps", main="Time Series plot of Avg Steps per time interval")
sum(is.na(activity$steps))
sum(is.na(activity$interval))
?match
activity$steps <- ifelse(is.na(activity$steps),a4$avgSteps[match(activity$interval,a4$interval)],activity$steps)
head(activity)
head(a4)
a5 <- ddply(activity,"date",summarize,sumSteps=sum(steps) )
hist(a5$sumSteps,10,xlab="number of steps taken", main="Histogram of Steps per Day")
mean(a5$sumSteps)
median(a5$sumSteps)
summary(a5, digits=10)
summary(a5$sumSteps, digits=10)
head(a5)
summary(a3$sumSteps, digits=10)
head(weekdays(a5$date))
str(weekdays(a5$date))
?ifelse
wkend <- c("Saturday", "Sunday")
wkendInd <- weekdays(a5$date) %in% wkend
head(wkendInd)
a5$Weekend <- wkendInd
str(a5)
a6 <- ddply(activityNoNA,"interval","Weekend",summarize,avgSteps=mean(steps) )
a6 <- ddply(activityNoNA,c("interval","Weekend"),summarize,avgSteps=mean(steps) )
activity$Weekend <- weekdays(a5$date) %in% wkend
# find the average number of steps per time interval
a6 <- ddply(activity,c("interval","Weekend"),summarize,avgSteps=mean(steps) )
head(a6)
activity$Weekend <- weekdays(a5$date) %in% wkend
# find the average number of steps per time interval
a6 <- ddply(activity,c("Weekend","interval"),summarize,avgSteps=mean(steps) )
head(a6)
a6$interval[which.max(a6$avgSteps)]
plot(a6$interval,a6$avgSteps,type="l",xlab="time interval",ylab="avg # of steps", main="Time Series plot of Avg Steps per time interval")
